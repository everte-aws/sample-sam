AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  guidance-search
  Sample SAM Template for guidance-search

Globals:
  Function:
    Timeout: 60
    MemorySize: 128
    LoggingConfig:
      LogFormat: JSON

Parameters:
  CollectionName:
    Description: 'Name of the collection to use for the search index'
    Type: 'String'
    Default: 'guidance-search-collection'

Resources:
  FeatureExtractionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './feature-extraction/'
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/title-enhancer:*"
            - Sid: BedrockAll
              Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'
            - Sid: DescribeKey
              Effect: Allow
              Action:
                - kms:DescribeKey
              Resource: arn:*:kms:*:::*
            - Sid: APIsWithAllResourceAccess
              Effect: Allow
              Action:
                - iam:ListRoles
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
              Resource: '*'
            - Sid: PassRoleToBedrock
              Effect: Allow
              Action:
                - iam:PassRole
              Resource: arn:aws:iam::*:role/*AmazonBedrock*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - bedrock.amazonaws.com
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  DescriptionEnhancerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './description-enhancer/'
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource:  !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                -  !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/title-enhancer:*'
            - Sid: BedrockAll
              Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'
            - Sid: DescribeKey
              Effect: Allow
              Action:
                - kms:DescribeKey
              Resource: arn:*:kms:*:::*
            - Sid: APIsWithAllResourceAccess
              Effect: Allow
              Action:
                - iam:ListRoles
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
              Resource: '*'
            - Sid: PassRoleToBedrock
              Effect: Allow
              Action:
                - iam:PassRole
              Resource: arn:aws:iam::*:role/*AmazonBedrock*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - bedrock.amazonaws.com
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  
  PushOpensearchFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './push-opensearch/'
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:  
          #ENDPOINT: !Sub !Join [".", [${OpenSearchServerlessCollection.Id},${AWS::Region},"aoss.amazonaws.com"] ] 
          ENDPOINT: !Sub "${OpenSearchServerlessCollection.Id}.${AWS::Region}.aoss.amazonaws.com"
          REGION: !Sub ${AWS::Region}
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - aoss:BatchGetLifecyclePolicy
                - aoss:GetAccessPolicy
                - aoss:CreateAccessPolicy
                - aoss:UpdateSecurityConfig
                - aoss:UpdateLifecyclePolicy
                - aoss:UpdateVpcEndpoint
                - aoss:UpdateSecurityPolicy
                - aoss:CreateLifecyclePolicy
                - aoss:ListAccessPolicies
                - aoss:ListSecurityPolicies
                - aoss:UpdateAccessPolicy
                - aoss:DeleteSecurityPolicy
                - aoss:UntagResource
                - aoss:GetSecurityPolicy
                - aoss:ListTagsForResource
                - aoss:BatchGetCollection
                - aoss:ListLifecyclePolicies
                - aoss:ListSecurityConfigs
                - aoss:DeleteLifecyclePolicy
                - aoss:CreateSecurityConfig
                - aoss:CreateSecurityPolicy
                - aoss:TagResource
                - aoss:DeleteVpcEndpoint
                - aoss:BatchGetVpcEndpoint
                - aoss:GetPoliciesStats
                - aoss:ListVpcEndpoints
                - aoss:UpdateAccountSettings
                - aoss:GetAccountSettings
                - aoss:GetSecurityConfig
                - aoss:CreateVpcEndpoint
                - aoss:BatchGetEffectiveLifecyclePolicy
                - aoss:DeleteSecurityConfig
                - aoss:ListCollections
                - aoss:DeleteAccessPolicy
                - aoss:CreateCollection
              Resource: '*'
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - aoss:*
              Resource:
                -  !Sub 'arn:aws:aoss:*:${AWS::AccountId}:collection/*'
                -  !Sub 'arn:aws:aoss:*:${AWS::AccountId}:dashboards/default'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource:  !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                -  !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/push-opensearch:*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
    DependsOn: OpenSearchServerlessCollection
  
  TitleEnhancerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: './title-enhancer/'
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource:  !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                -  !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/title-enhancer:*'
            - Sid: BedrockAll
              Effect: Allow
              Action:
                - bedrock:*
              Resource: '*'
            - Sid: DescribeKey
              Effect: Allow
              Action:
                - kms:DescribeKey
              Resource: arn:*:kms:*:::*
            - Sid: APIsWithAllResourceAccess
              Effect: Allow
              Action:
                - iam:ListRoles
                - ec2:DescribeVpcs
                - ec2:DescribeSubnets
                - ec2:DescribeSecurityGroups
              Resource: '*'
            - Sid: PassRoleToBedrock
              Effect: Allow
              Action:
                - iam:PassRole
              Resource: arn:aws:iam::*:role/*AmazonBedrock*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - bedrock.amazonaws.com
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto

  StateMachine30021eef:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        StartAt: Enhance Title
        Comment: >-
          An example of itegrating lambda functtions in Step Functions state
          machine.
        States:
          Enhance Title:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName: ${lambdainvoke_FunctionName_7cca2b3e}
              Payload.$: $
            Next: Enhance Description
            ResultPath: $.result.title
          Enhance Description:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName: ${lambdainvoke_FunctionName_f2f1cc15}
              Payload.$: $
            Next: Extract Features
            ResultPath: $.result.description
          Extract Features:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            Parameters:
              FunctionName: ${lambdainvoke_FunctionName_a994982a}
              Payload.$: $
            Next: Pass
            ResultPath: $.result.features
          Pass:
            Type: Pass
            Next: Push to Opensearch
            Parameters:
              title.$: $.result.title.Payload.title
              description.$: $.result.description.Payload.description
              features.$: $.result.features.Payload.features
          Push to Opensearch:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke
            OutputPath: $.Payload
            Parameters:
              Payload.$: $
              FunctionName: ${lambdainvoke_FunctionName_e711db3e}
            Retry:
              - ErrorEquals:
                  - Lambda.ServiceException
                  - Lambda.AWSLambdaException
                  - Lambda.SdkClientException
                  - Lambda.TooManyRequestsException
                IntervalSeconds: 1
                MaxAttempts: 3
                BackoffRate: 2
                JitterStrategy: FULL
            Next: Success
          Success:
            Type: Succeed
      DefinitionSubstitutions:
        lambdainvoke_FunctionName_7cca2b3e: !GetAtt TitleEnhancerFunction.Arn
        lambdainvoke_FunctionName_f2f1cc15: !GetAtt DescriptionEnhancerFunction.Arn
        lambdainvoke_FunctionName_a994982a: !GetAtt FeatureExtractionFunction.Arn
        lambdainvoke_FunctionName_e711db3e: !GetAtt PushOpensearchFunction.Arn       
      Name: StateMachine30021eef
      Type: STANDARD
      Role:
        Fn::GetAtt:
          - Role302d73ac
          - Arn
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn:
                Fn::GetAtt:
                  - LogGroup1a018160
                  - Arn
  Role302d73ac:
    Type: AWS::IAM::Role
    Properties:
      RoleName: StepFunctions_IAM_ROLE_enhancement-orchestrationdd190b9a
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      MaxSessionDuration: 3600
  Policyb46785a6:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: SnsPublishScopedAccessPolicy33d8afbf
      RoleName:
        Ref: Role302d73ac
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:MySnsTopic'
  Policy866f6134:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: XRayAccessPolicyfbbf8107
      RoleName:
        Ref: Role302d73ac
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
              - xray:GetSamplingRules
              - xray:GetSamplingTargets
            Resource:
              - '*'
  Policyf2c89aac:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: LambdaInvokeScopedAccessPolicy5982d761
      RoleName:
        Ref: Role302d73ac
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:MyLambdaFunction:*'
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:MyLambdaFunction'
  Policyf5d2b3e9:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: CloudWatchLogsDeliveryFullAccessPolicy45ad425d
      RoleName:
        Ref: Role302d73ac
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogDelivery
              - logs:GetLogDelivery
              - logs:UpdateLogDelivery
              - logs:DeleteLogDelivery
              - logs:ListLogDeliveries
              - logs:PutResourcePolicy
              - logs:DescribeResourcePolicies
              - logs:DescribeLogGroups
            Resource: '*'
  Policy0ebab043:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: lambda24bc1c78
      RoleName:
        Ref: Role302d73ac
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt TitleEnhancerFunction.Arn
              - !GetAtt PushOpensearchFunction.Arn
              - !GetAtt FeatureExtractionFunction.Arn
              - !GetAtt DescriptionEnhancerFunction.Arn
  LogGroup1a018160:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/vendedlogs/states/StateMachine30021eef-Logs   

  OpenSearchServerlessCollection:
    Type: AWS::OpenSearchServerless::Collection
    Properties:
      Description: 'Serverless Collection for Enhanced Search'
      Name: !Ref CollectionName
      StandbyReplicas: ENABLED
      Type: VECTORSEARCH
    DependsOn: OpenSearchServerlessSecurityPolicy00encryption00gZ3hA

  OpenSearchServerlessSecurityPolicy00encryption00gZ3hA:
    Type: AWS::OpenSearchServerless::SecurityPolicy
    Properties:
      Policy: !Sub >-
        {"Rules":[{"ResourceType":"collection","Resource":["collection/${CollectionName}"]}],"AWSOwnedKey":true}
      Type: encryption
      Description: !Sub '${CollectionName}-encryption'
      Name: !Sub 'policy-encrypt-${CollectionName}'
    

  OpenSearchServerlessAccessPolicy00data00pBTWQ:
    Type: AWS::OpenSearchServerless::AccessPolicy
    Properties:
      Policy: !Sub '[{"Rules": [{"Resource":
        ["collection/${CollectionName}"],"Permission":
        ["aoss:CreateCollectionItems", "aoss:DeleteCollectionItems",
        "aoss:UpdateCollectionItems",
        "aoss:DescribeCollectionItems"],"ResourceType": "collection"},
        {"Resource": ["index/${CollectionName}/*"],"Permission":
        ["aoss:CreateIndex", "aoss:DeleteIndex", "aoss:UpdateIndex",
        "aoss:DescribeIndex", "aoss:ReadDocument",
        "aoss:WriteDocument"],"ResourceType": "index"}],"Principal":
        ["${PushOpensearchFunctionRole.Arn}"],"Description":
        "lambdaPolicy"}]'
      Type: data
      Name: lambdaaccesspolicy


  OpenSearchServerlessAccessPolicy00data00McPGK:
    Type: AWS::OpenSearchServerless::AccessPolicy
    Properties:
      Policy: !Sub '[{"Rules": [{"Resource":
        ["collection/${CollectionName}"],"Permission":
        ["aoss:CreateCollectionItems", "aoss:DeleteCollectionItems",
        "aoss:UpdateCollectionItems",
        "aoss:DescribeCollectionItems"],"ResourceType": "collection"},
        {"Resource": ["index/${CollectionName}/*"],"Permission":
        ["aoss:CreateIndex", "aoss:DeleteIndex", "aoss:UpdateIndex",
        "aoss:DescribeIndex", "aoss:ReadDocument",
        "aoss:WriteDocument"],"ResourceType": "index"}],"Principal":
        ["arn:aws:iam::${AWS::AccountId}:role/admin"],"Description": "Easy data
        policy"}]'
      Type: data
      Description: Easy data policy
      Name: easy-guidance-collection
    
  OpenSearchServerlessSecurityPolicy00network00KUrFV:
    Type: AWS::OpenSearchServerless::SecurityPolicy
    Properties:
      Policy: !Sub '[{"Rules": [{"Resource":
        ["collection/${CollectionName}"],"ResourceType": "collection"},
        {"Resource": ["collection/${CollectionName}"],"ResourceType":
        "dashboard"}],"AllowFromPublic": false}]'
      Type: network
      Description: guidance-collection-network
      Name: !Sub 'network-policy-${CollectionName}'
    
Outputs:
  FeatureExtractionFunction:
    Description: FeatureExtractionFunction Function ARN
    Value: !GetAtt FeatureExtractionFunction.Arn